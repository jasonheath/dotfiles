# ~/.bashrc
#
# sourced by interactive shells that aren't login shells
# typically source by the other files

export LANG=C

# If not running interactively, don't do anything
case $- in
    *i*) ;;
      *) return;;
esac


# Preferred editor for local and remote sessions
if [[ -n $SSH_CONNECTION ]]; then
  export EDITOR='vim'
else
  export EDITOR='vim'
fi

{{- if eq .chezmoi.os "darwin" }}

#export PATH_GO='/Users/jasonheath/Development/go'
export PATH_HOMEBREW="/usr/local/bin:/usr/local/sbin"
export PATH_HOME_BIN="$HOME/bin"
export PATH_MACVIM="/Applications/MacVim.app/Contents/bin"
#export PATH_POSTGRES='/Applications/Postgres.app/Contents/Versions/latest/bin'
export PATH_VSCODE="/Applications/Visual Studio Code.app/Contents/Resources/app/bin"

export PATH="$PATH_HOME_BIN:$PATH_MACVIM:$PATH_VSCODE:$PATH_HOMEBREW:$PATH"

{{- else if eq .chezmoi.os "linux" }}

export PATH="$HOME/bin:$PATH"

{{- end }}

{{- if eq .chezmoi.username "jaheath" }}
export HAB_ORIGIN=jah_tryhabitat
# To pass custom arguments to run the Supervisor, export 'HAB_STUDIO_SUP' with
# the arguments before running 'hab studio enter'.
{{- end }}

# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=512
HISTFILESIZE=2048

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# If set, the pattern "**" used in a pathname expansion context will
# match all files and zero or more directories and subdirectories.
#shopt -s globstar

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "${debian_chroot:-}" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color|*-256color) color_prompt=yes;;
esac

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
	# We have color support; assume it's compliant with Ecma-48
	# (ISO/IEC-6429). (Lack of such support is extremely rare, and such
	# a case would tend to support setf rather than setaf.)
	color_prompt=yes
    else
	color_prompt=
    fi
fi

if [ "$color_prompt" = yes ]; then
    PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
else
    PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
fi
unset color_prompt force_color_prompt

# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
    PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
    ;;
*)
    ;;
esac


# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.

if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

# Add an "alert" alias for long running commands.  Use like so:
#   sleep 10; alert
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
fi

# colored GCC warnings and errors
export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'

alias grep='grep --color=auto'
alias fgrep='fgrep --color=auto'
alias egrep='egrep --color=auto'

alias rm='rm -i'
alias cp='cp -i'

alias   l='ls  -FG --color=auto'
alias  l1='ls  -1FG --color=auto'
alias  ll='ls  -lFGhl --color=auto'
alias  la='ls  -AFG --color=auto'
alias lal='ls  -AFGhl --color=auto'
alias la1='ls -1AFGh --color=auto'

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi

. "$HOME/.cargo/env"

# When Bash is run non-interactively, to run a shell script, for example, it
# looks to the value stored in the BASH_ENV environment variable and attempts
# to executes what it finds there. This file is meant to help non-interactive
# bash scripts called from within bash or from within other shells.  
#
#   export BASH_ENV="$HOME/.bashrc"
#
# NOTE: You can also set this value in other shells to help Bash scripts run
#       while using another shell such as zsh.
#
# NOTE: This won't work while there is an interactivity check at the beginning
#       of this file

