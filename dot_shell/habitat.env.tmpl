#---------------------------------------------------------------------
# Progress/Chef/Habitat ENV settings to be shared between shells 
# https://docs.chef.io/habitat/environment_variables/
#---------------------------------------------------------------------

if [[ -z "${HAB_AUTH_TOKEN}" ]]; then
  echo "You need to \"export HAB_AUTH_TOKEN='xxx'\""
else
  echo "HAB_AUTH_TOKEN=${HAB_AUTH_TOKEN}"
fi

#export HAB_ORIGIN=habitat
export ${HAB_ORIGIN:=jasonheath}
echo "export HAB_ORIGIN=${HAB_ORIGIN}"

# HABITAT environment variables supporting the habitat build
#---------------------------------------------------------------------
# LDFLAGS
#---------------------------------------------------------------------
x="-L/usr/local/opt/libpq/lib"
x="-L/usr/local/opt/libarchive/lib:${x}"
if [[ -n $LDFLAGS ]]; then
  x="$x:$LDFLAGS"
fi
export LDFLAGS=$x
unset x

#---------------------------------------------------------------------
# CPPFLAGS
#---------------------------------------------------------------------
x="-I/usr/local/opt/libpq/include"
x="-I/usr/local/opt/libarchive/include:${x}"
if [[ -n $CPPFLAGS ]]; then
  cppflags="$x:$CPPFLAGS"
fi
export CPPFLAGS=$x
unset x

#---------------------------------------------------------------------
# PKG_CONFIG_PATH
#---------------------------------------------------------------------
x="/usr/local/lib/pkgconfig"
x="/usr/local/opt/libpq/lib/pkgconfig:${x}"
x="/usr/local/opt/libarchive/lib/pkgconfig:${x}"
if [[ -n $PKG_CONFIG_PATH ]]; then
  x="$x:$PKG_CONFIG_PATH"
fi
export PKG_CONFIG_PATH=$x
unset x

#---------------------------------------------------------------------
# MORE PATH
#---------------------------------------------------------------------
# This path mgmt is focused on adding to the PATH for compilation so it appends
# to the PATH set up above so that anything that we wanted to opt into (as
# opposed to need to) and anything the system put on the path precedes and has
# precedence over anything that compilation needs forced us into adding.
x="/usr/local/opt/libpq/bin" # libpq needed for habitat builder
if [[ -n $PATH ]]; then
  x="$PATH:$x"
fi
export PATH=$x
unset x

export LIBARCHIVE_INCLUDE_DIR=/usr/local/opt/libarchive/include
export LIBARCHIVE_LIB_DIR=/usr/local/opt/libarchive/lib
export LIBZMQ_INCLUDE_DIR="/usr/local/include"
export LIBZMQ_LIB_DIR="/usr/local/lib"
export PROTOC="/usr/local/bin/protoc"
export PROTOC_INCLUDE="/usr/local/include"

#Need to properly account for these linux settings
#-{{/* else if eq .chezmoi.os "linux" */}}
#-export LIBZMQ_INCLUDE_DIR="/usr/include"
#-export LIBZMQ_LIB_DIR="/usr/lib/x86_64-linux-gnu"
#-export PKG_CONFIG_PATH="/usr/lib/x86_64-linux-gnu/pkgconfig"
#-export PROTOC="/usr/bin/protoc"
#-export PROTOC_INCLUDE="/usr/include"
#-{{/* end */}}


# UNDOCUMENTED?
#export HAB_BUTTERFLY_BINARY
#export HAB_LAUNCH_BINARY
#export HAB_STUDIO_BINARY
#export HAB_SUP_BINARY="/home/jah/Development/progress/habitat/target/debug/hab-sup" # NO DEFAULT?

#export FS_ROOT="$HOME/Development/progress/habroot/"
#   END: Progress/Chef/Habitat ENV variables

# To pass custom arguments to run the Supervisor, export 'HAB_STUDIO_SUP' with
# the arguments before running 'hab studio enter'.

