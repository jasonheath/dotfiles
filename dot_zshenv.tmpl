# '.zshenv' is sourced on all invocations of the shell, unless the -f
# option is set. It should contain commands to set the command search 
# path, plus other important environment variables. '.zshenv' should not
# contain commands that produce output or assume the shell is attached
# to a tty.
#
# '.zshenv' is 1/4 files that are executed

export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
if [[ -n $SSH_CONNECTION ]]; then
  export EDITOR='vim'
else
  export EDITOR='vim'
fi

# ssh
# export SSH_KEY_PATH="~/.ssh/rsa_id"


#---------------------------------------------------------------------
# PATH management
#---------------------------------------------------------------------
# This path mgmt is focused on adding things to the PATH that I've wanted to
# install so here we build up a hierarchical ordering of paths and then we
# append any preexisting PATH value to that so that our preferred executables
# are found prior to things on the path before we intereceded
{{- if eq .chezmoi.os "darwin" }}
x="$HOME/bin"
x="${x}:/usr/local/bin:/usr/local/sbin" # homebrew (https://brew.sh/)
x="${x}:/Applications/MacVim.app/Contents/bin"
x="${x}:/Applications/Visual Studio Code.app/Contents/Resources/app/bin"
if [[ -n $PATH ]]; then
  x="$x:$PATH"
fi
export PATH=$x
unset x
{{- else if eq .chezmoi.os "linux" }}

export HOMEBREW_CELLAR="/home/linuxbrew/.linuxbrew/Cellar"
export HOMEBREW_REPOSITORY="/home/linuxbrew/.linuxbrew/Homebrew"

export PATH_HOME_BIN="$HOME/bin"
export PATH_HOMEBREW="/home/linuxbrew/.linuxbrew/bin:/home/linuxbrew/.linuxbrew/sbin"
export MANPATH_HOMEBREW="/home/linuxbrew/.linuxbrew/share/man"
export INFOPATH_HOMEBREW="/home/linuxbrew/.linuxbrew/share/info"

export PATH="${PATH_HOME_BIN}:${PATH_HOMEBREW}${PATH+:$PATH}"
export MANPATH="$MANPATH_HOMEBREW:${MANPATH+:$MANPATH}:"
export INFOPATH="$INFOPATH_HOMEBREW:${INFOPATH:-}"

{{- end }}

source $HOME/.shell/habitat.env
source $HOME/.shell/go.env

#---------------------------------------------------------------------
# rust environment variables
#---------------------------------------------------------------------

export RA_LOG="error" # the logging level for rust analyzer
export RUST_BACKTRACE="0"
#export RUST_LOG="info,manager::file_watcher=trace"


#---------------------------------------------------------------------
# ruby environment variables 
#---------------------------------------------------------------------
if [[ -s $(whence brew) ]]; then
  # https://github.com/rbenv/ruby-build/wiki
  # For Ruby versions 2.xâ€“3.0:
  # export RUBY_CONFIGURE_OPTS="--with-openssl-dir=$(brew --prefix openssl@1.1)"
  # Ruby 3.1 and above requires OpenSSL 3:
  export RUBY_CONFIGURE_OPTS="--with-openssl-dir=$(brew --prefix openssl@3)"
fi

#---------------------------------------------------------------------
# homebrew (https://brew.sh/)
#---------------------------------------------------------------------
if [[ -s $(whence brew) ]]; then
{{- if and (eq .chezmoi.os "darwin") (eq .chezmoi.arch "amd64") }}
export HOMEBREW_PREFIX="/usr/local"
{{- else if and (eq .chezmoi.os "darwin") (eq .chezmoi.arch "arm64") }}
export HOMEBREW_PREFIX="/opt/local"
{{- else if eq .chezmoi.os "linux" }}
export HOMEBREW_PREFIX="/home/linuxbrew/.linuxbrew"
{{- end }}
fi

